description: "This module provides an interface to the Spice package."
notes: "None"

# documentation of classes and functions are made distinct to perform
# sanity checks on the provided fields below. i.e. Class constructors don't need the return detailed.
#classes:

functions:
  convert_julian_date_to_ephemeris_time:
    short_summary: "Convert a Julian date to ephemeris time (equivalent to TDB in Spice)."
    extended_summary: |
      Function to convert a Julian date to ephemeris time, which is equivalent to barycentric
      dynamical time. A leap second kernel must have been loaded to use this function.
    parameters:
      - name: julian_date
        type: int
        description: "Julian date that is to be converted to ephemeris time."
    returns:
      - name: ephemeris_time
        #        type: double  # [cpp]
        type: float  # [py]
        description: "Julian date calculated from ephemeris time."

  convert_ephemeris_time_to_julian_date:
    short_summary: "Convert ephemeris time (equivalent to TDB) to a Julian date."
    extended_summary: |
      Function to convert ephemeris time, which is nearly equal to barycentric dynamical time, to the
      Julian date. A leap second kernel must have been loaded to use this function.
    parameters:
      - name: ephemeris_time
        type: float  # [py]
        description: "Ephemeris time that is to be converted to Julian date."
    returns:
      - name: julian_date
        type: float  # [py]
        description: "Julian date calculated from ephemeris time."

  convert_date_string_to_ephemeris_time:
    short_summary: "Converts a date string to ephemeris time."
    extended_summary: |
      Function to convert a date string, for instance 1988 June 13, 3:29:48 to ephemeris time,
      wrapper for str2et_c spice function.
    parameters:
      - name: date_string
        description: >
          String representing the date. See documentation of spice function str2et_c
          for details on supported formats.
        type: str  # [py]
    returns:
      - name: ephemeris_time
        type: str  # [py]
        description: "Ephemeris time corresponding to given date_string."

  get_body_cartesian_state_at_epoch:
    short_summary: "Get Cartesian state of a body, as observed from another body."
    extended_summary: |
      This function returns the state of a body, relative to another body, in a frame specified
      by the user. Corrections for light-time correction and stellar
      aberration can be applied to obtain the state of one of the bodies, as observed from the other.
      Wrapper for spkezr_c spice function.
    parameters:
      - name: target_body_name
        type: str  # [py]
        description: |
          Name of the body of which the state is to be obtained. A kernel with the
          ephemeris of this body must have been loaded. The string must be a spice-recognized
          name or ID.
      - name: observer_body_name
        type: str  # [py]
        description: |
          Name of the body relative to which the state is to be obtained.
          A kernel with theephemeris of this body must have been loaded.  The string must be a
          spice-recognized name or ID.
      - name: reference_frame_name
        type: str  # [py]
        description: |
          The spize-revognized name of the reference frame in which the state
          is to be returned. Spice kernel(s) required to perform the neccesary conversion from
          the states of the target and observer bodies to this frame need to have been loaded.
      - name: aberration_corrections
        type: str  # [py]
        description: |
          Setting for correction for setting corrections. See Spice
          documentation for extended discussion. Short summary: NONE: none, LT: light time
          corrected (one iteration for calculation), CN: light time corrected
          (multiple iterations, max 3) for calculation, S: Stellar aberration corrected. XLT and
          XCN can be provided to make the ephemerisTime input argument the transmission time,
          instead of receptionTime. Arguments can be combined (i.e."LT+S" or "XCN+S").
      - name: ephemeris_time
        type: float  # [py]
        description: |
          Observation time (or transmission time of observed light, see description
          of aberrationCorrections).
    returns:
      - name: cartesian_state_vector
        type: np.ndarray[6,]  # [py]
        description: "Cartesian state vector (x,y,z, position+velocity)."

  get_body_cartesian_position_at_epoch:
    short_summary: "Get Cartesian position of a body, as observed from another body."
    extended_summary: |
      This function returns the position of a body, relative to another body, in a frame specified
      by the user. Corrections for light-time correction and stellar
      aberration can be applied to obtain the state of one of the bodies, as observed from the other.
      Wrapper for spkpos_c spice function.
    parameters:
      - name: target_body_name
        type: str  # [py]
        description: |
          Name of the body of which the state is to be obtained. A kernel with the
          ephemeris of this body must have been loaded. The string must be a spice-recognized
          name or ID.
      - name: observer_body_name
        type: str  # [py]
        description: |
          Name of the body relative to which the state is to be obtained.
          A kernel with theephemeris of this body must have been loaded.  The string must be a
          spice-recognized name or ID.
      - name: reference_frame_name
        type: str  # [py]
        description: |
          The spize-revognized name of the reference frame in which the state
          is to be returned. Spice kernel(s) required to perform the neccesary conversion from
          the states of the target and observer bodies to this frame need to have been loaded.
      - name: aberration_corrections
        type: str  # [py]
        description: |
          Setting for correction for setting corrections. See Spice
          documentation for extended discussion. Short summary: NONE: none, LT: light time
          corrected (one iteration for calculation), CN: light time corrected
          (multiple iterations, max 3) for calculation, S: Stellar aberration corrected. XLT and
          XCN can be provided to make the ephemerisTime input argument the transmission time,
          instead of receptionTime. Arguments can be combined (i.e."LT+S" or "XCN+S").
      - name: ephemeris_time
        type: float  # [py]
        description: |
          Observation time (or transmission time of observed light, see description
          of aberrationCorrections).



  get_cartesian_state_from_tle_at_epoch:
    short_summary: "Get Cartesian state of a satellite from its two-line element set at a specified epoch."
    extended_summary: |
      This function retrieves the state of a satellite at a certain epoch by propagating the
      SGP or SDP models (near-Earth resp. deep space) with the given two-line elements (TLE).
      This function serves as a wrapper for the ev2lin_ function in CSpice.
    parameters:
      - name: epoch
        type: float  # [py]
        description: "Time in seconds since J2000 at which the state is to be retrieved."
      - name: tle
        type: Tle
        description: "Shared pointer to a Tle object containing the SGP/SDP model parameters as derived from the element set."
    returns:
      - name: cartesian_state_vector
        type: np.ndarray[6,]  # [py]
        description: "Cartesian state vector (x,y,z, position+velocity)."

  compute_rotation_quaternion_between_frames:
    short_summary: "Compute quaternion of rotation between two frames."
    extended_summary: |
      This function computes the quaternion of rotation between two frames at a given time instant.
      kernels defining the two frames, as well as any required intermediate frames, at the requested
      time must have been loaded. Wrapper for pxform_c spice function.
    parameters:
      - name: original_frame
        description: "Reference frame from which the rotation is made."
      - name: new_frame
        description: "Reference frame to which the rotation is made."
      - name: ephemeris_time
        description: "Value of ephemeris time at which rotation is to be determined."
    returns:
      - description: "Rotation quaternion from original to new frame at given time."

  compute_rotation_matrix_deri_vative_between_frames:
    short_summary: "Computes time derivative of rotation matrix between two frames."
    extended_summary: |
      This function computes the derivative of the rotation matrix between two frames at a given
      time instant. kernels defining the two frames, as well as any required intermediate frames, at
      the requested time must have been loaded. Wrapper for (part of) sxform_c spice function.
    parameters:
      - name: original_frame
        description: "Reference frame from which the rotation is made."
      - name: new_frame
        description: "Reference frame to which the rotation is made."
      - name: ephemeris_time
        description: "Value of ephemeris time at which rotation is to be determined."
    returns:
      - description: "Time derivative of rotation matrix from original to new frame at given time."

  get_angular_velocity_vector_of_frame_in_original_frame:
    short_summary: "Computes the angular velocity of one frame w.r.t. to another frame."
    extended_summary: |
      Computes the angular velocity of one frame w.r.t. to another frame. at a given
      time instant. kernels defining the two frames, as well as any required intermediate frames, at
      the requested time must have been loaded. Wrapper for xf2rav_c spice function (utilizing
      sxform_c).
    parameters:
      - name: original_frame
        description: "Reference frame from which the rotation is made."
      - name: new_frame
        description: "Reference frame to which the rotation is made."
      - name: ephemeris_time
        description: "Value of ephemeris time at which rotation is to be determined."
    returns:
      - description: "Angular velocity of newFrame w.r.t. originalFrame, expressed in originalFrame."

  get_body_properties:
    short_summary: "Get property of a body from Spice."
    extended_summary: |
      Function to retrieve a property of a body from Spice, wraps the bodvrd_c Spice function.
    notes: |
      Function returns values with distance unit km, not m!
    parameters:
      - name: body_name
        description: "Name of the body of which the property is to be retrieved."
      - name: property
        description: >
          Name of the property that is to be retrieved. Naming conventions can be found
          in the bodvrd_c function documentation.
      - name: maximum_number_of_values
        type: int  # [py]
        description: >
          Number of values by which the property is expressed (i.e. 1 for
          gravitational parameter, 3 for tri-axial ellipsoid principal axes).
    returns:
      - description: "Property value(s) expressed in an STL vector of doubles."

  get_body_gravitational_parameter:
    short_summary: "Get gravitational parameter of a body."
    extended_summary: >
      This function retrieves the gravitational parameter of a body.
      Wraps the bodvrd_c spice function with "GM" as property type.
    parameters:
      - name: body
        description: "Name of the body of which the parameter is to be retrieved."
    returns:
      - description: "Gravitational parameter of requested body."

  get_average_radius:
    short_summary: "Get the (arithmetic) mean of the three principal axes of the tri-axial ellipsoid shape."
    extended_summary: >
      Returns the (arithmetic) mean of the three principal axes of the tri-axial ellipsoid shap of
      the requested body.
      Uses the bodvrd_c spice function with "RADII" as property type.
    parameters:
      - name: body
        description: "Name of the body of which the average radius is to be retrieved."
    returns:
      - description: "Arithmetic mean of principal axes of tri-axial ellipsoid shape model of body."

  convert_body_name_to_naif_id:
    short_summary: "Convert a body name to its NAIF identification number."
    extended_summary: |
      This function converts a body name to its NAIF identification number.The NAIF id number is
      required for a number of spice functions, whereas the name is easily interpretable by the user.
      Wrapper for the bods2c_c function.
    parameters:
      - name: body_name
        description: "Name of the body for which NAIF id is to be retrieved."
    returns:
      - description: "NAIF id number for the body with bodyName."

  check_body_property_in_kernel_pool:
    short_summary: "Check if a certain property of a body is in the kernel pool."
    extended_summary: |
      This function checks if a certain property of a body is in the kernel pool. These properties
      are defined in PCK kernels. Their names are given in the kernel file, typical names can be
      found in the Spice documentation. Wrapper for the bodfnd_c function.
    parameters:
      - name: body_name
        description: "Name of the body of which the property is to be checked."
      - name: body_property
        description: "Name of the property of which the presence is to be checked, not case-sensitive."
    returns:
      - description: "True if property is in pool, false if not."
        type: bool

  get_standard_kernels:
    short_summary: "Get the paths to the default legacy kernels."

  load_standard_kernels:
    short_summary: "Load the default legacy kernels."
    parameters:
      - name: kernel_paths
        type: str
        description: "Optional addition kernels to be loaded."

  get_total_count_of_kernels_loaded:
    short_summary: "Get the number of spice kernels currently loaded."
    extended_summary: |
      This function returns the amount of Spice kernels that are loaded into the kernel pool. The
      same kernel can be loaded multple times. Wrapper for the ktotal_c function.
    returns:
      - name: n_kernels
        type: int
        description: "Number of spice kernels currently loaded."

  load_kernel:
    short_summary: "Loads a Spice kernel into the pool."
    extended_summary: |
      This function loads a Spice kernel into the kernel pool, from which it can be used by the
      various internal spice routines. Matters regarding the manner in which Spice handles different
      kernels containing the same information can be found in the spice required reading
      documentation, kernel section. Wrapper for the furnsh_c function.
    parameters:
      - name: file_path
        type: str
        description: "Path to the spice kernel to be loaded."

  clear_kernels:
    short_summary: "Clear all loaded spice kernels."
    extended_summary: |
      This function removes all Spice kernels from the kernel pool. Wrapper for the kclear_c function.
    returns:
      - type: None   # [python]
      - type: void   # [cpp]

